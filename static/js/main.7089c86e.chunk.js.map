{"version":3,"sources":["api/api.js","components/Music/Music.module.css","components/Settings/Settings.module.css","components/News/News.module.css","components/Users/users.module.css","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/News/News.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","assets/images/user.jpg","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.js","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","hoc/withSuspense.js","index.js","components/common/FormsControls/FormsControls.js","assets/images/loader3s200px.svg","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControl.module.css","utils/validators/validators.js","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","module","exports","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","style","navbar","item","to","activeClassName","activeLink","Music","props","music","Settings","settings","News","news","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","initialState","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","state","action","followed","count","filter","id","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","usersPhoto","disabled","some","name","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","formSummaryError","message","messages","length","stopSubmit","_error","formData","log","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","dialogsReducer","sidebar","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","fallback","component","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","FormControl","input","meta","child","element","hasError","touched","formControl","children","Textarea","restProps","placeholder","validators","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","messages_post_Data","like","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId","SEND_MESSAGE","dialogsData","messagesData","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.7089c86e.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\"API-KEY\": \"e24dc5af-8371-4da6-927f-55bbe569d740\"}\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unfollow(userId){\r\n        return instance.delete(`follow/${userId}`);\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('use new api');\r\n        return profileAPI.getProfile(userId)\r\n        /*return instance.get(`profile/` + userId);*/\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status });\r\n    }\r\n}\r\n\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\nexport const getUsers2 = (currentPage = 1, pageSize = 10) => {\r\n    return axios.get(`follow?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => {\r\n            return response.data;\r\n        });\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"music\":\"Music_music__XhoBo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__1ogPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__1RzPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"users_usersPhoto__11xLS\",\"selectedPage\":\"users_selectedPage__1AcH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__yOshc\",\"item\":\"Navbar_item__3SQA7\",\"activeLink\":\"Navbar_activeLink__3fUsR\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport style from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={style.navbar}>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/profile\" activeClassName={style.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/users\" activeClassName={style.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={style.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/news\" activeClassName={style.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to='/music' activeClassName={style.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to=\"/settings\" activeClassName={style.activeLink}>Settings</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport style from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n      <div className={style.music}>\r\n          Music\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport style from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return(\r\n      <div className={style.settings}>\r\n          Settings\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport style from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return(\r\n      <div className={style.news}>\r\n          News\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default News;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    }\r\n    )\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                /*users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })*/\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                /*                users: state.users.map(u => {\r\n                                    if (u.id === action.userId) {\r\n                                        return {...u, followed: false}\r\n                                    }\r\n                                    return u;\r\n                                })*/\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: [...action.users]}\r\n        }\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count}\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import styles from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\nimport cn from \"classnames\";\r\n\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    /*let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);*/\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p>=leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]:currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n\r\n\r\n/*            {pages.map(p => {\r\n                return <span className={props.currentPage === p && styles.selectedPage}\r\n                             onClick={(e) => {\r\n                                 props.onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}*/","export default __webpack_public_path__ + \"static/media/user.5ead6ada.jpg\";","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.jpg\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow, ...props}) => {\r\n    return <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.usersPhoto}/>\r\n                        </ NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id);\r\n                            }}>Follow</button>}\r\n                            </div>\r\n                            </span>\r\n                <span>\r\n                            <span>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                            <div>{'user.location.country'}</div>\r\n                            <div>{\"user.location.city\"}</div>\r\n                            </span>\r\n                            </span>\r\n    </div>\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalItemsCount, pageSize, onPageChanged, users, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage}\r\n                   totalItemsCount={totalItemsCount}\r\n                   onPageChanged={onPageChanged}\r\n                   pageSize={pageSize}\r\n        />\r\n        {users.map(u => <User user={u}\r\n              followingInProgress={props.followingInProgress}\r\n              key={u.id}\r\n              unfollow={props.unfollow}\r\n              follow={props.follow}\r\n        />\r\n        )}\r\n    </div>\r\n}\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true);\r\n});\r\n/*export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\nexport const getUsersSelector = (state) => {\r\n    return getUsers(state).filter(u => true);\r\n}\r\nexport const getUsersSuperSelector = createSelector(getUsers, (users) => {\r\n    return users.filter(u => true); типо сложная операция на запросы\r\n});*/\r\n\r\n/*export const getUsersSuperSelector = createSelector(getUsers, getIsFetching, (users, isFetching) => {\r\n    return users.filter(u => true);\r\n    пример с несколькими зависимостями\r\n})*/\r\n\r\n/*По-прежнему простые селекторы мы создаём руками.\r\n    А вот более сложные селекторы, которые мы не хотим перезапускать, результат работы которых мы хотим как бы \"запомнить\",\r\n    чтобы не делать отработку логики по-новой, так как не изменились данные,\r\n    которые могли бы повлиять (зависимости) на иной результат, мы будем создавать с  помощью функции createSelector*/\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\n\r\n/*users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)*/\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users.jsx\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers, getUsersSuperSelector\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props\r\n        this.props.getUsers(currentPage, pageSize);\r\n        /*this.props.toggleIsFetching(true);\r\n\r\n        usersAPI.requestUsers(this.props.currentPage, this.props.pageSize).then(data => {\r\n            this.props.toggleIsFetching(false);\r\n            this.props.setUsers(data.items);\r\n            this.props.setTotalUsersCount(data.totalCount);\r\n        });*/\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize);\r\n\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n        {this.props.isFetching ? <Preloader />: null}\r\n        <Users totalItemsCount={this.props.totalItemsCount}\r\n               pageSize={this.props.pageSize}\r\n               currentPage={this.props.currentPage}\r\n               onPageChanged={this.onPageChanged}\r\n               users={this.props.users}\r\n               unfollow={this.props.unfollow}\r\n               follow={this.props.follow}\r\n               followingInProgress={this.props.followingInProgress}\r\n        />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n/*let mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalItemsCount: state.usersPage.totalItemsCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        //users: getUsersSuperSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalItemsCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n/*let withRedirect = withAuthRedirect(UsersContainer);\r\n\r\nexport default connect(mapStateToProps,\r\n    {follow, unfollow, setCurrentPage,\r\n    toggleFollowingProgress, requestUsers})(withRedirect);*/\r\n\r\nexport default  compose(\r\n    connect(mapStateToProps,\r\n        {follow, unfollow, setCurrentPage,\r\n            toggleFollowingProgress, getUsers: requestUsers})/*,\r\n    withAuthRedirect*/\r\n)(UsersContainer);","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return<header className={style.header}>\r\n        <img src='https://i.ytimg.com/vi/UDx6jWdor3o/hqdefault_live.jpg'></img>\r\n\r\n          <div className={style.loginBlock}>\r\n              { props.isAuth\r\n                  ? <div>{props.login} - <button onClick={props.logout}>logout</button></div>\r\n                  : <NavLink to={'/login'}>Login</NavLink> }\r\n          </div>\r\n      </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n/*const SET_USER_DATA = 'SET_USER_DATA';*/\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n    /*isFetching: false*/\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {authAPI} from \"../../api/api\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n/*    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }*/\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../common/FormsControls/FormsControl.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                {createField(\"Email\", \"email\", [required], Input)}\r\n                {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n                {createField(null, \"rememberMe\", null, Input, {type: \"checkbox\"}, \"remember me\")}\r\n            { error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    //unique form name, this will be put in state and can be shown with store.getState().form in console\r\n    form: \"login\"\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm  onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSuccess())\r\n    });\r\n}\r\n\r\nexport default appReducer;","let initialState = {}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default  sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar.jsx';\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport News from \"./components/News/News\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n/*import DialogsContainer from \"./components/Dialogs/DialogsContainer\";*/\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer.jsx\"));\r\n/*import ProfileContainer from \"./components/Content/ProfileContainer\";*/\r\nconst ProfileContainer = React.lazy(() => import(\"./components/Content/ProfileContainer\"));\r\n/*suspense must be, to see loading div use slow 3g*/\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n                <div className='app-wrapper'>\r\n\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}\r\n                        />\r\n\r\n                        <Route path='/profile/:userId?'\r\n                               render={() => {\r\n                                   return <Suspense fallback={<div>Loading...</div>}>\r\n                                   <ProfileContainer/>\r\n                                   </Suspense>\r\n                                   }}/>\r\n\r\n                        <Route path='/music' component={Music}/>\r\n\r\n                        <Route path='/settings' component={Settings}/>\r\n\r\n                        <Route path='/news' component={News}/>\r\n\r\n                        <Route path='/users' render={() => <UsersContainer/>}/>\r\n\r\n                        <Route path='/login'\r\n                               render={() => <LoginPage/>}/>\r\n                    </div>\r\n\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n    {\r\n        initialized: state.app.initialized\r\n    }\r\n)\r\n\r\n/*export default connect(mapStateToProps, {initializeApp})(App);*/\r\n\r\n/*export default App;*/\r\n//export default App; this is a comment\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n\r\nconst SamuraiJSApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import React, {Suspense} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </Suspense>\r\n    }\r\n}","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\nimport SamuraiJSApp from \"./App\";\r\n\r\n/*let rerenderEntireTree = () => {*/\r\n    ReactDOM.render(\r\n/*        <BrowserRouter>\r\n            <Provider store={store}>\r\n            <App />\r\n            </Provider>\r\n        </BrowserRouter>,*/ <SamuraiJSApp />, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n/*rerenderEntireTree(store.getState());\r\nrerenderEntireTree(); /!*DIMICH*!/*/\r\n\r\n/*store.subscribe(() => {\r\n    let state = store.getState();\r\n    rerenderEntireTree(state);\r\n}); /!*example of callback*!/*/\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import React from \"react\";\r\nimport styles from \"./FormsControl.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\nconst FormControl = ({input, meta, child, element, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            <div>\r\n                { hasError && <span>{meta.error}</span> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n/*    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n            <textarea {...input} {...props}/>\r\n            </div>\r\n            <div>\r\n                { hasError && <span>{meta.error}</span> }\r\n            </div>\r\n        </div>\r\n    )*/\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n/*    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            <div>\r\n                { hasError && <span>{meta.error}</span> }\r\n            </div>\r\n        </div>\r\n    )*/\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field\r\n        placeholder={placeholder}\r\n        name={name}\r\n        component={component}\r\n        validate={validators}\r\n        {...props} /> {text}\r\n    </div>\r\n);\r\n\r\n","export default __webpack_public_path__ + \"static/media/loader3s200px.da63b459.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/loader3s200px.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div style={{backgroundColor: 'white'}}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3laL_\",\"error\":\"FormsControl_error__zxDQ-\",\"formSummaryError\":\"FormsControl_formSummaryError__3_v88\"};","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n\r\n/*\r\nexport const maxLength30 = (value) => {\r\n    if (value && value.length > 30) return \"Max length 30 symbols\";\r\n    return undefined;\r\n}*/\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1hq-W\",\"loginBlock\":\"Header_loginBlock__AP8co\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__2bV5_\",\"pageNumber\":\"Paginator_pageNumber__2mJvI\",\"selectedPage\":\"Paginator_selectedPage__3IkkI\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n/*const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';*/\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    messages_post_Data: [\r\n        {id: 1, message: \"hello\", like: 3},\r\n        {id: 2, message: \"hi\", like: 2},\r\n        {id: 3, message: \"leatherman\", like: 0}\r\n    ],\r\n/*    newPostText: \"flux samurai\",*/\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                like: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                messages_post_Data: [...state.messages_post_Data, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        /*case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }*/\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST:\r\n            return {...state, messages_post_Data: state.messages_post_Data.filter(p => p.id != action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n/*export const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, nexText: text});*/\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n    }\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n        dispatch(setStatus(response.data));\r\n    }\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport default profileReducer;","/*const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';*/\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogsData: [\r\n        {id: 1, name: \"Shomen\"}, /*это объект dialog*/\r\n        {id: 2, name: \"Mage\"},\r\n        {id: 3, name: \"Samurai\"},\r\n        {id: 4, name: \"Programer\"}\r\n    ],\r\n\r\n    messagesData: [\r\n        {id: 1, message: \"Hi\"}, /*это объект message*/\r\n        {id: 2, message: \"wake up Samurai\"},\r\n        {id: 3, message: \"no please\"},\r\n        {id: 4, message: \"yes\"}\r\n    ]/*,\r\n    newMessageBody: ``*/\r\n}\r\n\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n/*        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            }*/\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                /*newMessageBody: '',*/\r\n                messagesData: [...state.messagesData, {id: 5, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n/*export const updateNewMessageBodyCreator = (body) => ({type: UPDATE_NEW_MESSAGE_BODY, body: body});*/\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}
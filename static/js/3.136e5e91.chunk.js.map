{"version":3,"sources":["hoc/withAuthRedirect.js","components/Content/ProfileInfo/ProfileInfo.module.css","components/Content/My_Post/My_Post.module.css","components/Content/My_Post/Post/Post.module.css","components/Content/My_Post/Post/Post.jsx","components/Content/My_Post/My_Post.jsx","components/Content/ProfileInfo/ProfileStatus.jsx","components/Content/ProfileInfo/ProfileStatusWithHooks.jsx","components/Content/ProfileInfo/ProfileInfo.jsx","components/Content/My_Post/My_PostContainer.jsx","components/Content/Profile.jsx","components/Content/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","style","posts","src","message","like","My_Post","memo","postsElements","messages_post_Data","map","p","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","ProfileStatus","editMode","status","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","console","log","onDoubleClick","onChange","autoFocus","onBlur","ProfileStatusWithHooks","useState","setEditMode","setStatus","useEffect","ProfileInfo","profile","content","descriptionBlock","photos","large","Preloader","My_PostContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.136e5e91.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Xa2z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"My_Post_item__3nT-Y\",\"postsBlock\":\"My_Post_postsBlock__3uF5W\",\"posts\":\"My_Post_posts__2nJ0M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Post_posts__DgTwy\",\"item\":\"Post_item__3RxI3\"};","import React from 'react';\r\nimport style from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.posts}>\r\n      <br />\r\n      <img src='' />\r\n      { props.message }\r\n      <br />\r\n      <span>like - { props.like }</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport style from './My_Post.module.css';\r\nimport Post from './Post/Post.jsx'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst My_Post = React.memo(props => {\r\n\r\n    /*shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps != this.props || nextState != this.state;\r\n        } this is for class components*/\r\n\r\n    let postsElements = props.messages_post_Data.map(p => <Post message={p.message} like={p.like}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={style.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={style.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n)\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength10]}/>\r\n{/*                <textarea onChange={props.onChange} ref={props.ref} value={props.value}/>*/}\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\n\r\nexport default My_Post;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state ={\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        /*console.log(this.state.editMode)*/\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n        /*this.state.editMode = true;\r\n        /!*this.forceUpdate();*!/*/\r\n\r\n        /*console.log(this.state.editMode)*/ /*WE ARE IN ANOTHER PLACE*/\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n        console.log(\"componentDidUpdate\");\r\n        /*this was written to escape problem with two request to api - get status and update status */\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"no status\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconsole.log(ProfileStatus.editMode)\r\n\r\nexport default ProfileStatus;","import React, {useState, useEffect} from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n/*    let stateWithSetState = useState(false);\r\n    let editMode = stateWithSetState[0];\r\n    let setEditMode = stateWithSetState[1];*/\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                { !editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"no status\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input value={status} onChange={onStatusChange} onBlur={deactivateEditMode} autoFocus={true}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\nconsole.log(ProfileStatusWithHooks.editMode)\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <div>\r\n                <img src=\"https://i09.fotocdn.net/s106/679a6e12191db18b/public_pin_m/2278551286.jpg\"/>\r\n            </div>\r\n            <div className={style.descriptionBlock}>\r\n                <img src={props.profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport My_Post from \"./My_Post\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages_post_Data: state.profilePage.messages_post_Data,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n/*        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextActionCreator(text);\r\n            dispatch(action);\r\n        },*/\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst My_PostContainer = connect(mapStateToProps, mapDispatchToProps)(My_Post)\r\n\r\n\r\nexport default My_PostContainer;","import React from 'react';\r\nimport style from './Profile.module.css';\r\nimport My_Post from './My_Post/My_Post.jsx';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport My_PostContainer from \"./My_Post/My_PostContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div /*className={style.content}*/>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <My_PostContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n    //withAuthRedirect\r\n)(ProfileContainer)\r\n\r\n/*\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);*/\r\n"],"sourceRoot":""}
{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","DialogItem","path","id","className","style","dialog","activeClassName","activeLink","Message","message","Dialogs","dialogsData","dialogs","messagesPage","map","messages","messagesData","newMessageBody","dialogsItems","values","SendMessage","compose","dispatch","sendMessageCreator"],"mappings":"sNAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKC,MAAMN,OAET,cAACG,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUC,GAAI,eAJV,GAEXC,IAAML,WAUtC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBClB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,mICItPC,EAAcC,YAAiB,IAgBtBC,cAAU,CAACC,KAAM,yBAAjBD,EAdQ,SAACR,GACpB,OACI,uBAAMU,SAAUV,EAAMW,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUV,GAC1CW,KAAK,iBAAiBC,YAAY,yBAE7C,8BACI,kDCRVC,EAAa,SAACnB,GAChB,IAAIoB,EAAO,YAAcpB,EAAMqB,GAC/B,OACI,qBAAKC,UAAWC,IAAMC,OAAtB,SACI,cAAC,IAAD,CAASvB,GAAImB,EAAMK,gBAAiBF,IAAMG,WAA1C,SAAuD1B,EAAMiB,UAKnEU,EAAU,SAAC3B,GACb,OACI,qBAAKsB,UAAWC,IAAMK,QAAtB,SAAgC5B,EAAM4B,WAkE/BC,EA9DC,SAAC7B,GAEDA,EAAM8B,YAAlB,IASIC,EAAU/B,EAAMgC,aAAaF,YAAYG,KAAI,SAAAT,GAAM,OAAI,cAAC,EAAD,CAAYP,KAAMO,EAAOP,KAAsBI,GAAIG,EAAOH,IAAtBG,EAAOH,OAClGa,EAAWlC,EAAMgC,aAAaG,aAAaF,KAAI,SAAAL,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,QAA0BP,GAAIO,EAAQP,IAAxBO,EAAQP,OACzFrB,EAAMgC,aAAaI,eAcxC,OAAKpC,EAAMN,OAGP,sBAAK4B,UAAWC,IAAMQ,QAAtB,UAEI,qBAAKT,UAAWC,IAAMc,aAAtB,SACKN,IAGL,qBAAKT,UAAWC,IAAMW,SAAtB,SACKA,IAGL,cAAC,EAAD,CAAgBxB,SAlBJ,SAAC4B,GAEjBtC,EAAMuC,YAAYD,EAAOF,sBAGH,cAAC,IAAD,CAAUnC,GAAI,Y,wBCZ7BuC,sBACXrC,aA3BkB,SAACV,GACnB,MAAO,CACHuC,aAAcvC,EAAMuC,iBAIH,SAACS,GACtB,MAAM,CAIFF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAgBpCxC,IAFW4C,CAGbX","file":"static/js/4.8f9aa9dc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__UiAiB\",\"dialog\":\"Dialogs_dialog__2uK0O\",\"activeLink\":\"Dialogs_activeLink__2gxTZ\",\"dialogsItems\":\"Dialogs_dialogsItems__26fhI\",\"active\":\"Dialogs_active__p11ZM\",\"messages\":\"Dialogs_messages__3DC9J\",\"message\":\"Dialogs_message__28-Q3\"};","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogsAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={style.dialog}>\r\n            <NavLink to={path} activeClassName={style.activeLink}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={style.message}>{props.message}</div>\r\n    );\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsData;\r\n\r\n    let newMesssageElement = React.createRef();\r\n\r\n    let addMessage = () => {\r\n        let text = newMesssageElement.current.value;\r\n        alert(text);\r\n    }\r\n\r\n    let dialogs = props.messagesPage.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messages = props.messagesPage.messagesData.map(message => <Message message={message.message} key={message.id} id={message.id}/>);\r\n    let newMessageBody = props.messagesPage.newMessageBody;\r\n\r\n/*    let onSendMessageClick = () => {\r\n        props.SendMessage();\r\n    };*/\r\n/*    let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    };*/\r\n    let addNewMessage = (values) => {\r\n        /*alert(values.newMessageBody);*/\r\n        props.SendMessage(values.newMessageBody);\r\n    };\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    return (\r\n        <div className={style.dialogs}>\r\n\r\n            <div className={style.dialogsItems}>\r\n                {dialogs}\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                {messages}\r\n            </div>\r\n            {/*<AddMessageFormRedux onSubmit={addNewMessage}/>*/}\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n};\r\n\r\n/*const AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            {/!*<textarea ref={newMesssageElement}>new messege</textarea>*!/}\r\n            <Field component=\"textarea\" name=\"newMessageBody\" placeholder=\"Enter your message\"></Field>\r\n            {/!*<textarea value={newMessageBody} placeholder='enter your message' onChange={onNewMessageChange}></textarea>*!/}\r\n        </div>\r\n    <div>\r\n        <button>send</button>\r\n    </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogsAddMessageForm\"})(AddMessageForm);*/\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport style from './Dialogs.module.css';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n/*import StoreContext from \"../../StoreContext\";*/\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n/*        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },*/\r\n        SendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n/*compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)*/\r\n\r\n/*let AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}